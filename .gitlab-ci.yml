services:
  - postgres:9.6

variables:
  POSTGRES_DB: spatialspring
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "admin"
  SPRING_CONFIG_LOCATION: classpath:application-test.properties
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  APT_CACHE_DIR: "$CI_PROJECT_DIR/apt-cache"
  CYPRESS_BASE_URL: http://localhost:4326
  CYPRESS_PAGE_LOAD_TIMEOUT: 400000
  

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches
    - .npm
    - cache/Cypress
    - apt-cache

stages:
  - frontend_test_build_artifacts
  - backend_test_build_artifacts
  - deploy4test
  - test_integration

build:frontend:
  image: node:12.3.1
  stage: frontend_test_build_artifacts
  script: cd frontend && npm ci &&  npm run build
  artifacts:
    name: frontend_build
    paths: 
    - frontend/build/*
    expire_in: 1 week

build:backend:
  image: java:8-jdk
  stage: backend_test_build_artifacts
  script: mkdir  backend/src/main/resources/public && cp -r frontend/build/*  backend/src/main/resources/public && cd backend && ./gradlew build 
  artifacts:
    paths:
    - backend/build/libs/
  dependencies:
    - build:frontend

# test:backend:
#   image: java:8-jdk
#   stage: test_backend
#   script: cd backend && ./gradlew clean test --info
#   artifacts:
#     name: reports
#     reports:
#       junit: backend/build/test-results/TEST-*.xml
#     when: always
#     expire_in: 1 week


deploy:gitlab_registry:
  image: tico/docker
  stage: deploy4test
  services:
  - docker:dind

  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cp $CI_PROJECT_DIR/backend/build/libs/backend-0.0.1.jar $CI_PROJECT_DIR/docker/app.jar
  script:
    - docker pull $CI_REGISTRY_IMAGE:test || true
    - cd $CI_PROJECT_DIR/docker
    # - docker-compose --cache-from $CI_REGISTRY_IMAGE:test --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:test build app 
    - docker build --cache-from $CI_REGISTRY_IMAGE:test --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:test .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:test

  dependencies:
    - build:backend


test:integration:
  image: timbru31/java-node
  stage: test_integration
  # script: java -jar backend/build/libs/backend-0.0.1.jar 
  # services:
  #  - name: registry.gitlab.com/david.cerbino/acstdd:test
  #    alias: app
  variables:
    CYPRESS_BASE_URL: http://localhost:4326

  before_script:
    - cd frontend && npm install -g wait-on
    - cd $CI_PROJECT_DIR/frontend && npm install

  script: 
     - java -jar $CI_PROJECT_DIR/backend/build/libs/backend-0.0.1.jar & 
     - wait-on  $CYPRESS_BASE_URL
     - CYPRESS_baseUrl=http://localhost:4326
     - $CI_PROJECT_DIR/frontend/node_modules/.bin/cypress run --record --key 09e33c06-8a43-427e-9207-17ef995538a8
  dependencies:
    - build:backend
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/frontend/cypress/videos/**/*.mp4
      - $CI_PROJECT_DIR/frontend/cypress/screenshots/**/*.png
    expire_in: 1 day

